<project>
	<property name="src.dir"     value="src"/>
	<property name="build.dir"   value="build/"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jar.dir"     value="${build.dir}/jar"/>

	<property name="test.src.dir"   value="test"/>
	<property name="test.build.dir" value="${build.dir}/test"/>

	<property name="lib.dir" value="lib/"/>

	<!-- set jar name here -->
	<property name="jarsclient.path"    value="${jar.dir}/SClient_nikit.jar"/>
	<property name="jarsserver.path"    value="${jar.dir}/SServer_nikit.jar"/>
	<property name="jarxmlclient.path"    value="${jar.dir}/XMLClient_nikit.jar"/>
	<property name="jarxmlserver.path"    value="${jar.dir}/XMLServer_nikit.jar"/>
	<!-- Change your main class here: -->
	<property name="sclientmain.class"  value="SerializedVersion.ClientMain" />
	<property name="sservermain.class"  value="SerializedVersion.ServerMain" />
	<property name="xmlclientmain.class"  value="XMLVersion.ClientMain" />
	<property name="xmlservermain.class"  value="XMLVersion.ServerMain" />

	<path id="classpath.test">
		<pathelement location="${lib.dir}/junit-4.12.jar"/>
		<pathelement location="${lib.dir}/hamcrest-core-1.3.jar"/>
		<pathelement location="${classes.dir}"/>
	</path>

    <target name="clean">
        <delete dir="build"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}">
			<classpath refid="classpath.test"/>
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

	</target>

	<target name="SServerjar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jarsserver.path}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${sservermain.class}"/>
            </manifest>
        </jar>
    </target>

	<target name="SClientjar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jarsclient.path}" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${sclientmain.class}"/>
			</manifest>
		</jar>
	</target>

	<target name="SServerrun" depends="SServerjar">
        <java jar="${jarsserver.path}" fork="true"/>
    </target>

	<target name="SClientrun" depends="SClientjar">
		<java jar="${jarsclient.path}" fork="true"/>
	</target>

	<target name="XMLServerjar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jarxmlserver.path}" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${xmlservermain.class}"/>
			</manifest>
		</jar>
	</target>

	<target name="XMLClientjar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jarxmlclient.path}" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${xmlclientmain.class}"/>
			</manifest>
		</jar>
	</target>

	<target name="XMLServerrun" depends="XMLServerjar">
		<java jar="${jarxmlserver.path}" fork="true"/>
	</target>

	<target name="XMLClientrun" depends="XMLClientjar">
		<java jar="${jarxmlclient.path}" fork="true"/>
	</target>

	<target name="test-compile" depends="compile">
		<mkdir dir="${test.build.dir}"/>
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
			<classpath refid="classpath.test"/>
		</javac>
		<copy todir="${test.build.dir}">
			<fileset dir="${test.src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

	</target>

	<target name="test" depends="test-compile">
		<junit printsummary="on" haltonfailure="yes" fork="true">
			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${test.build.dir}"/>
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.build.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>
</project>
